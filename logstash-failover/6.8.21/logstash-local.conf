input {
  elasticsearch {
    id => "message-failover-logstash-1"
    hosts => "es01:9200"
    index => "message-producer-failover"
    query => '
      {
        "query": {
          "bool": {
            "must": [
              {
                "match_phrase": {
                  "service": {
                    "query": "message-producer-api"
                  }
                }
              },
              {
                "match_phrase": {
                  "severity": {
                    "query": "ERROR"
                  }
                }
              },
              {
                "range": {
                  "@timestamp": {
                    "gte": "now-2m/m",
                    "lt": "now-1m/m"
                  }
                }
              },
              {
                "exists": {
                  "field": "message-producer-api.message"
                }
              }
            ]
          }
        },
        "sort": [
          {
            "@timestamp": {
              "order": "asc"
            }
          }
        ]
      }
    '
    schedule => "*/1 * * * *"
  }
}

filter {
  prune {
    whitelist_names => [
      "^message-producer-api.message$",
      "^message-producer-api.topicName$"
    ]
  }
  json {
    source => "message-producer-api.message"
    remove_field => "message-producer-api.message"
  }
  mutate {
    add_field => { "dataKeyId" => "%{[dataKeyIdList][0]}" }
    remove_field => [ "dataKeyIdList" ]
    rename => {"message-producer-api.topicName" => "topicName"}
  }
}

output {
  kafka {
    codec => json
    bootstrap_servers => "kafka:9092"
    topic_id => "%{topicName}"
  }
}
